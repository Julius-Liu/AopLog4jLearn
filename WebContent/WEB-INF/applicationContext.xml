<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-lazy-init="false" default-autowire="byName">
	
	<context:annotation-config />
	<context:component-scan base-package="com" />


	<!-- 
		配置日志 使用Aop 记录日志  
		注意:
			1). 此处proxy-target-class="true" 否则Action内的参数会被拦截掉,导致action内无法获得前台传递的参数 
			2). Action需交给spring容器去管理
	-->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:aspect  id="aopRiZhiAspect" ref="myRiZhi"> 
			<!-- 对那些方法进行日志记录, 此处屏蔽action内的set get方法 -->
            <aop:pointcut id="aopRiZhi" expression="(execution(* com.miao.*.*.*.*(..)) ) and (!execution(* com.miao.*.action.*.set*(..)) ) and (!execution(* com.miao.*.action.*.get*(..)) )" />  
            <aop:before pointcut-ref="aopRiZhi" method="doBefore"/>  
            <aop:after pointcut-ref="aopRiZhi" method="doAfter"/>  
            <aop:around pointcut-ref="aopRiZhi" method="doAround"/>  
        </aop:aspect>

	</aop:config>

	<bean id="myRiZhi" class="com.miao.log.MyLog"></bean>	<!-- Aop日志类 -->
	
	<bean id="logonAction" class="com.miao.logon.action.LogonAction" scope="prototype" ></bean>	<!-- 要使用spring aop记录日志的action 需要交给spring容器来管理 -->

</beans>
